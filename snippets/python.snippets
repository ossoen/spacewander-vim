########### header and bottom
snippet code
# coding: utf-8
endsnippet

snippet script
#!env python
# coding: utf-8
endsnippet

snippet main
if __name__ == '__main__':
    ${1}
endsnippet

########### import
snippet im
import ${1}
endsnippet

snippet fi "fro"
from ${1:sys} import ${2}
endsnippet

########### single char
snippet t
True${1}
endsnippet

snippet f
False${1}
endsnippet

snippet n
None${1}
endsnippet

snippet r
return ${1}
endsnippet

snippet s
self.${1}
endsnippet

########### print
snippet p
print ${1}
endsnippet

snippet pr
print "${1}"
endsnippet

snippet pr%
print "${1}" % ${2}
endsnippet

############# 逻辑控制
snippet el
if ${1}:
    ${2}
else:
    ${3}
endsnippet

snippet ei
if ${1} :
    ${2}
elif ${3} :
    ${4}
else :
    ${5}
endsnippet

snippet wh
while ${1} :
    ${0}
endsnippet

snippet for
for ${1} in ${2} :
    ${3}
endsnippet

############# define function
snippet d "function"
def ${1:fname}(${2:`!v indent('.') ? 'self' : ''`}):
    """${3:docstring pfor $1}"""
    return ${4}
endsnippet

############# about class
snippet c "class"
class ${1:classname}${2:(object)}:
    def __init__(self,${3:**kwargs}):
        """${4:docstring}"""
        ${5:super.__init__}
endsnippet

snippet m "method"
def ${1:fname}(self, ${2:**kwargs}):
    """${3:docstring for $1}"""
    ${4:pass}
endsnippet

snippet _m "private method"
def _${1:fname}(self, ${2:**kwargs}):
    """${3:docstring for $1}"""
    ${4:pass}
endsnippet

snippet cm "classmethod"
@classmethod
def ${1:fname}(cls, ${2:**kwargs}):
    """${3:docstring for $1}"""
    ${4:pass}
endsnippet

snippet sm "staticmethod"
@staticmethod
def ${1:fname}(${2}):
    """${3}"""
    ${4:pass}
endsnippet

snippet _
def __${1:init}__(self, ${2:**kwargs}):
    ${3:pass}
endsnippet

snippet pro
def ${1}():
    doc = "${2: The $1 property.}"
    def fget(self):
        ${3:return self._$1}
    def fset(self, value):
        ${4:self._$1 = value}
    def fdel(self):
        ${5:del self._$1}
    return locals()
$1 = property(**$1())
endsnippet

snippet init "init"
def __init__(self, ${1:args}):
    ${2}
endsnippet

########### docs
snippet file
"""
@Author: ${1:`spacewander`}
@Email: ${2:`spacewanderlzx@gmail.com`}
@Date: ${3}
@Desc: ${4}
"""
endsnippet

snippet rai
raise ${1}
endsnippet

########### 异常处理
snippet tr
import traceback; traceback.print_exc()
endsnippet
#############
