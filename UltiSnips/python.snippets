########### header and bottom
snippet code
# coding: utf-8
endsnippet

snippet #!
#!/usr/bin/env python
# coding: utf-8

endsnippet

snippet main
if __name__ == '__main__':
    ${1}
endsnippet

########### import
snippet im
import ${1}
endsnippet

snippet fi "fro"
from ${1:sys} import ${2}
endsnippet

########### single char
snippet T "" w
True
endsnippet

snippet F "" w
False
endsnippet

snippet N "" w
None
endsnippet

snippet r
return ${1}
endsnippet

snippet s "" w
self.${1}
endsnippet

########### print
snippet p
print(${1})
endsnippet

snippet pr
print "${1}"
endsnippet

snippet pr%
print "${1}" % ${2}
endsnippet

############# 逻辑控制
snippet br "break"
break
endsnippet

snippet con "continue"
continue
endsnippet

snippet if "if"
if ${1}:
	${0}
endsnippet

snippet ie
if ${1}:
    ${2}
else:
    ${3}
endsnippet

snippet ief
if ${1}:
    ${2}
elif ${3}:
    ${4}
else:
    ${5}
endsnippet

snippet el "else"
else:
	${0}
endsnippet

snippet wh
while ${1}:
    ${0}
endsnippet

snippet for
for ${1} in ${2}:
    ${3}
endsnippet

############# define function
snippet d "function"
def ${1:fname}(${2:self}):
	${0}

endsnippet

snippet ds "function"
def ${1:fname}(self, ${2:others}):
	${0}

endsnippet

snippet dt "def test_"
def test_${1:fname}():
	${0}

endsnippet

snippet l "lambda"
lambda ${1:args}: $0
endsnippet

############# about class
snippet c "class"
class ${1:classname}${2:(object)}:
	${0}
endsnippet

snippet se "self" w
self
endsnippet

snippet m "method"
def ${1:fname}(self, ${2:**kwargs}):
    ${0:pass}
endsnippet

snippet _m "private method"
def _${1:fname}(self, ${2:**kwargs}):
    ${0:pass}
endsnippet

snippet cm "classmethod"
@classmethod
def ${1:fname}(cls, ${2:**kwargs}):
    ${0:pass}
endsnippet

snippet sm "staticmethod"
@staticmethod
def ${1:fname}(${2}):
    ${0:pass}
endsnippet

snippet _
def __${1:init}__(self, ${2:*args}):
    ${0:pass}
endsnippet

snippet pro
def ${1}():
    doc = "${2: The $1 property.}"
    def fget(self):
        ${3:return self._$1}
    def fset(self, value):
        ${4:self._$1 = value}
    def fdel(self):
        ${5:del self._$1}
    return locals()
$1 = property(**$1())
endsnippet

snippet init "init"
def __init__(self, ${1:args}):
    ${0}
endsnippet

########### quick snippet
snippet wi "with"
with ${1} as f:
	${0}
endsnippet

snippet wo "with open()"
with open(${1}) as f:
	${0}
endsnippet
########### docs
snippet file
"""
@Author: ${1:`spacewander`}
@Email: ${2:`spacewanderlzx@gmail.com`}
@Date: ${3}
@Desc: ${4}
"""
endsnippet

snippet ra
raise ${1}
endsnippet

########### 异常处理
snippet tr
import traceback; traceback.print_exc()
endsnippet

snippet a "assert"
assert
endsnippet

snippet try "try...except"
try:
	${0}
except ${1:OSError}:

endsnippet


############# pytest

snippet wr
with pytest.raises($1):
	$0
endsnippet

snippet ae "assert =="
assert $1 == $0
endsnippet

